name: CI
on: [push, pull_request]
jobs:
  build_unix:
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
          os: [ubuntu-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v1
    - name: (macOS) Install LLVM and setup PATH
      if: startsWith(matrix.os, 'macOS')
      run: |
        brew install llvm
        echo ::add-path::/usr/local/opt/llvm/bin
        echo ::set-env name=CPATH::`xcrun --show-sdk-path`/usr/include
    - name: (Linux) Install LLVM
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get install llvm
    - name: Install Odin
      run: |
        git clone https://github.com/odin-lang/Odin.git
        pushd Odin
        make release
        popd
    - name: Build JVM
      run: make ODIN_DIR=Odin
    - name: Build JDK
      run: ./build-jdk
  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install cURL
        run: choco install curl
      - name: Install Make
        run: choco install make
      - name: Install Odin
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat
          git clone https://github.com/odin-lang/Odin.git
          cd Odin
          ./build.bat
          cd ..
      - name: Download and unpack LLVM binaries
        shell: cmd
        run: |
          cd Odin/bin
          curl -sL https://github.com/odin-lang/Odin/releases/download/llvm-windows/llvm-binaries.zip --output llvm-binaries.zip
          7z x llvm-binaries.zip > nul
          cd ../..
      - name: Build JVM
        run: |
          make ODIN_DIR=Odin
      - name: Build JDK
        run: |
          ./build-jdk